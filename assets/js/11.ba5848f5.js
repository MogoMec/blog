(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{517:function(t,s,a){"use strict";a.r(s);var n=a(7),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("在看面经的时候发现经常会有读代码给出打印结果的题目，就像下面这段代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("显然，这是在考察面试者对JS运行机制的理解。为了搞清楚这段代码究竟会按何种顺序打印出结果，我们需要知道JavaScript引擎的具体运行机制，理解JS的事件循环（Event Loop）这个核心概念。")]),t._v(" "),a("h2",{attrs:{id:"一、单线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、单线程"}},[t._v("#")]),t._v(" 一、单线程")]),t._v(" "),a("p",[t._v("JavaScript是一门单线程语言，这是JS运行机制的基础知识点。单线程意味着JavaScript同一时间只能做一件事，这件事做完了再做另一件。一开始我对JS的这个特性感到费解，毕竟在我以前接触的编程语言（Java、Python），都对多线程编程有着完善支持，多线程意味着更高的效率。")]),t._v(" "),a("p",[t._v("然而，JS的单线程特性也很容易理解。在Node.js出世之前，JavaScript就只是作为浏览器脚本语言存在的，其主要用途就是与用户互动，操作DOM，目标功能决定了单线程这一灵魂设计。为了避免复杂的同步问题和潜在的并发错误（多个线程同时操作DOM是难以想象的），将JavaScript设计为单线程是十分合情合理的。阮一峰前辈在"),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2014/10/event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客"),a("OutboundLink")],1),t._v("中这样断言：")]),t._v(" "),a("blockquote",[a("p",[t._v("为了避免复杂性，从一诞生，JavaScript就是单线程，这已经成了这门语言的核心特征，将来也不会改变。")])]),t._v(" "),a("h2",{attrs:{id:"二、任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、任务队列"}},[t._v("#")]),t._v(" 二、任务队列")]),t._v(" "),a("p",[t._v("在理解了JavaScript的单线程特性后，你可能感到更疑惑了，既然是单线程，输出顺序这一问题又是怎么产生的呢？是的，我们都知道JavaScript是能够进行"),a("strong",[t._v("异步操作")]),t._v("的，但是这些异步操作却不是依赖多线程来实现的，而是借助"),a("strong",[t._v("任务队列")]),t._v("。")]),t._v(" "),a("p",[t._v("JavaScript的异步操作需求是为了更佳的性能和更好的用户体验。对于那些耗时性的任务（定时器、Ajax网络请求等），JavaScript会将这些任务交给那些擅长处理对应任务的其他线程（浏览器的渲染进程本身是多线程的），然后忙自己的。这些异步任务在有了运行结果后就会被放入任务队列中，等到JS主线程的后续处理。尽管到这我们尚未厘清具体的处理顺序，但是借助任务队列，JavaScript确实能实现异步操作了。")]),t._v(" "),a("h2",{attrs:{id:"三、事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、事件循环"}},[t._v("#")]),t._v(" 三、事件循环")]),t._v(" "),a("p",[t._v("为了搞清楚JavaScript对同步任务和异步任务具体的处理逻辑，我们需要完善对JavaScript引擎的认识，为了便于理解，可以简单地将JavaScript看做两部分：")]),t._v(" "),a("ul",[a("li",[t._v("内存堆：分配内存的地方，对象等引用数据类型存储在堆中")]),t._v(" "),a("li",[t._v("执行栈：执行任务的地方，用于管理任务执行的顺序")])])])}),[],!1,null,null,null);s.default=p.exports}}]);